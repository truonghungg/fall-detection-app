{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TNC\\\\do_an\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Chart as ChartJS, PointElement, LineElement, Filler, Tooltip, Legend, LinearScale, CategoryScale, LineController } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport './App.css';\n\n// Register Chart.js components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(PointElement, LineElement, Filler, Tooltip, Legend, LinearScale, CategoryScale, LineController);\nfunction App() {\n  _s();\n  const [isConnected, setIsConnected] = useState(false);\n  const [currentPrediction, setCurrentPrediction] = useState({\n    action: 'Loading...',\n    confidence: '--',\n    timestamp: ''\n  });\n  const [predictionHistory, setPredictionHistory] = useState([]);\n  const [accelTimeSeriesData, setAccelTimeSeriesData] = useState([]);\n  const [gyroTimeSeriesData, setGyroTimeSeriesData] = useState([]);\n  const ws = useRef(null);\n  useEffect(() => {\n    function connectWebSocket() {\n      // Replace with your WebSocket server address\n      ws.current = new WebSocket('ws://localhost:8081');\n      ws.current.onopen = () => {\n        console.log('WebSocket Connected');\n        setIsConnected(true);\n      };\n      ws.current.onmessage = event => {\n        const data = JSON.parse(event.data);\n        console.log('Message from server:', data);\n\n        // Update Current Prediction\n        if (data.action && data.confidence !== undefined) {\n          setCurrentPrediction({\n            action: data.action,\n            confidence: `${(data.confidence * 100).toFixed(2)}%`,\n            timestamp: `Cập nhật lúc: ${new Date().toLocaleTimeString()}`\n          });\n\n          // Add to Prediction History (only if it's a prediction result)\n          setPredictionHistory(prevHistory => [{\n            time: new Date().toLocaleTimeString(),\n            action: data.action,\n            confidence: `${(data.confidence * 100).toFixed(2)}%`\n          }, ...prevHistory.slice(0, 9) // Keep last 10 predictions\n          ]);\n        }\n\n        // Update Time Series Data (keep last 100 points)\n        if (data.accelX !== undefined) {\n          setAccelTimeSeriesData(prevData => [...prevData.slice(prevData.length > 100 ? 1 : 0), {\n            time: new Date().toLocaleTimeString(),\n            x: data.accelX,\n            y: data.accelY,\n            z: data.accelZ\n          }]);\n          setGyroTimeSeriesData(prevData => [...prevData.slice(prevData.length > 100 ? 1 : 0), {\n            time: new Date().toLocaleTimeString(),\n            x: data.gyroX,\n            y: data.gyroY,\n            z: data.gyroZ\n          }]);\n        }\n      };\n      ws.current.onclose = event => {\n        console.log('WebSocket Disconnected', event);\n        setIsConnected(false);\n        // Attempt to reconnect after a delay\n        setTimeout(connectWebSocket, 5000);\n      };\n      ws.current.onerror = error => {\n        console.error('WebSocket Error:', error);\n        setIsConnected(false);\n        if (ws.current) {\n          ws.current.close();\n        }\n      };\n    }\n    connectWebSocket();\n\n    // Cleanup function to close WebSocket on component unmount\n    return () => {\n      if (ws.current) {\n        ws.current.close();\n      }\n    };\n  }, []); // Empty dependency array means this effect runs once on mount\n\n  const accelLineChartData = {\n    labels: accelTimeSeriesData.map(data => data.time),\n    datasets: [{\n      label: 'AccelX',\n      data: accelTimeSeriesData.map(data => data.x),\n      borderColor: 'rgba(0, 123, 255, 1)',\n      backgroundColor: 'rgba(0, 123, 255, 0.5)',\n      tension: 0.1\n    }, {\n      label: 'AccelY',\n      data: accelTimeSeriesData.map(data => data.y),\n      borderColor: 'rgba(40, 167, 69, 1)',\n      backgroundColor: 'rgba(40, 167, 69, 0.5)',\n      tension: 0.1\n    }, {\n      label: 'AccelZ',\n      data: accelTimeSeriesData.map(data => data.z),\n      borderColor: 'rgba(220, 53, 69, 1)',\n      backgroundColor: 'rgba(220, 53, 69, 0.5)',\n      tension: 0.1\n    }]\n  };\n  const gyroLineChartData = {\n    labels: gyroTimeSeriesData.map(data => data.time),\n    datasets: [{\n      label: 'GyroX',\n      data: gyroTimeSeriesData.map(data => data.x),\n      borderColor: 'rgba(23, 162, 184, 1)',\n      backgroundColor: 'rgba(23, 162, 184, 0.5)',\n      tension: 0.1\n    }, {\n      label: 'GyroY',\n      data: gyroTimeSeriesData.map(data => data.y),\n      borderColor: 'rgba(255, 193, 7, 1)',\n      backgroundColor: 'rgba(255, 193, 7, 0.5)',\n      tension: 0.1\n    }, {\n      label: 'GyroZ',\n      data: gyroTimeSeriesData.map(data => data.z),\n      borderColor: 'rgba(108, 117, 125, 1)',\n      backgroundColor: 'rgba(108, 117, 125, 0.5)',\n      tension: 0.1\n    }]\n  };\n  const lineChartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Real-time Accelerometer and Gyroscope Data'\n      }\n    },\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: 'Time'\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: 'Sensor Value'\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center mb-4\",\n      children: \"Fall Detection Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\",\n            children: \"D\\u1EF1 \\u0111o\\xE1n h\\xE0nh \\u0111\\u1ED9ng hi\\u1EC7n t\\u1EA1i\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            id: \"currentPrediction\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: currentPrediction.action\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: currentPrediction.confidence\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: currentPrediction.timestamp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\",\n            children: \"L\\u1ECBch s\\u1EED d\\u1EF1 \\u0111o\\xE1n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-bordered table-striped table-fixed\",\n              id: \"predictionHistoryTable\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Th\\u1EDDi gian\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"H\\xE0nh \\u0111\\u1ED9ng\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 225,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"\\u0110\\u1ED9 tin c\\u1EADy\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: predictionHistory.map((prediction, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: prediction.time\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: prediction.action\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 233,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: prediction.confidence\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 23\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\",\n            children: \"Bi\\u1EC3u \\u0111\\u1ED3 gia t\\u1ED1c (Realtime)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                height: '300px'\n              },\n              children: /*#__PURE__*/_jsxDEV(Line, {\n                data: accelLineChartData,\n                options: lineChartOptions\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 18\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\",\n            children: \"Bi\\u1EC3u \\u0111\\u1ED3 con quay h\\u1ED3i chuy\\u1EC3n (Realtime)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                height: '300px'\n              },\n              children: /*#__PURE__*/_jsxDEV(Line, {\n                data: gyroLineChartData,\n                options: lineChartOptions\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"utcr93d14WCu3Kr6r98jlAMkdZo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Chart","ChartJS","PointElement","LineElement","Filler","Tooltip","Legend","LinearScale","CategoryScale","LineController","Line","jsxDEV","_jsxDEV","register","App","_s","isConnected","setIsConnected","currentPrediction","setCurrentPrediction","action","confidence","timestamp","predictionHistory","setPredictionHistory","accelTimeSeriesData","setAccelTimeSeriesData","gyroTimeSeriesData","setGyroTimeSeriesData","ws","connectWebSocket","current","WebSocket","onopen","console","log","onmessage","event","data","JSON","parse","undefined","toFixed","Date","toLocaleTimeString","prevHistory","time","slice","accelX","prevData","length","x","y","accelY","z","accelZ","gyroX","gyroY","gyroZ","onclose","setTimeout","onerror","error","close","accelLineChartData","labels","map","datasets","label","borderColor","backgroundColor","tension","gyroLineChartData","lineChartOptions","responsive","maintainAspectRatio","plugins","legend","position","title","display","text","scales","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","prediction","index","style","height","options","_c","$RefreshReg$"],"sources":["C:/Users/TNC/do_an/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport {\r\n  Chart as ChartJS,\r\n  PointElement,\r\n  LineElement,\r\n  Filler,\r\n  Tooltip,\r\n  Legend,\r\n  LinearScale,\r\n  CategoryScale,\r\n  LineController,\r\n} from 'chart.js';\r\nimport { Line } from 'react-chartjs-2';\r\nimport './App.css';\r\n\r\n// Register Chart.js components\r\nChartJS.register(\r\n  PointElement,\r\n  LineElement,\r\n  Filler,\r\n  Tooltip,\r\n  Legend,\r\n  LinearScale,\r\n  CategoryScale,\r\n  LineController\r\n);\r\n\r\nfunction App() {\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [currentPrediction, setCurrentPrediction] = useState({\r\n    action: 'Loading...', confidence: '--', timestamp: ''\r\n  });\r\n  const [predictionHistory, setPredictionHistory] = useState([]);\r\n  const [accelTimeSeriesData, setAccelTimeSeriesData] = useState([]);\r\n  const [gyroTimeSeriesData, setGyroTimeSeriesData] = useState([]);\r\n\r\n  const ws = useRef(null);\r\n\r\n  useEffect(() => {\r\n    function connectWebSocket() {\r\n      // Replace with your WebSocket server address\r\n      ws.current = new WebSocket('ws://localhost:8081'); \r\n\r\n      ws.current.onopen = () => {\r\n        console.log('WebSocket Connected');\r\n        setIsConnected(true);\r\n      };\r\n\r\n      ws.current.onmessage = (event) => {\r\n        const data = JSON.parse(event.data);\r\n        console.log('Message from server:', data);\r\n\r\n        // Update Current Prediction\r\n        if (data.action && data.confidence !== undefined) {\r\n          setCurrentPrediction({\r\n            action: data.action,\r\n            confidence: `${(data.confidence * 100).toFixed(2)}%`,\r\n            timestamp: `Cập nhật lúc: ${new Date().toLocaleTimeString()}`,\r\n          });\r\n\r\n          // Add to Prediction History (only if it's a prediction result)\r\n          setPredictionHistory(prevHistory => [\r\n            { time: new Date().toLocaleTimeString(), action: data.action, confidence: `${(data.confidence * 100).toFixed(2)}%` },\r\n            ...prevHistory.slice(0, 9) // Keep last 10 predictions\r\n          ]);\r\n        }\r\n\r\n        // Update Time Series Data (keep last 100 points)\r\n        if (data.accelX !== undefined) {\r\n          setAccelTimeSeriesData(prevData => [\r\n              ...prevData.slice(prevData.length > 100 ? 1 : 0),\r\n              {\r\n                time: new Date().toLocaleTimeString(),\r\n                x: data.accelX,\r\n                y: data.accelY,\r\n                z: data.accelZ,\r\n              }\r\n            ]);\r\n            setGyroTimeSeriesData(prevData => [\r\n              ...prevData.slice(prevData.length > 100 ? 1 : 0),\r\n              {\r\n                time: new Date().toLocaleTimeString(),\r\n                x: data.gyroX,\r\n                y: data.gyroY,\r\n                z: data.gyroZ,\r\n              }\r\n            ]);\r\n        }\r\n      };\r\n\r\n      ws.current.onclose = (event) => {\r\n        console.log('WebSocket Disconnected', event);\r\n        setIsConnected(false);\r\n        // Attempt to reconnect after a delay\r\n        setTimeout(connectWebSocket, 5000);\r\n      };\r\n\r\n      ws.current.onerror = (error) => {\r\n        console.error('WebSocket Error:', error);\r\n        setIsConnected(false);\r\n        if (ws.current) {\r\n          ws.current.close();\r\n        }\r\n      };\r\n    }\r\n\r\n    connectWebSocket();\r\n\r\n    // Cleanup function to close WebSocket on component unmount\r\n    return () => {\r\n      if (ws.current) {\r\n        ws.current.close();\r\n      }\r\n    };\r\n  }, []); // Empty dependency array means this effect runs once on mount\r\n\r\n  const accelLineChartData = {\r\n      labels: accelTimeSeriesData.map(data => data.time),\r\n      datasets: [\r\n        {\r\n          label: 'AccelX',\r\n          data: accelTimeSeriesData.map(data => data.x),\r\n          borderColor: 'rgba(0, 123, 255, 1)',\r\n          backgroundColor: 'rgba(0, 123, 255, 0.5)',\r\n          tension: 0.1,\r\n        },\r\n        {\r\n          label: 'AccelY',\r\n          data: accelTimeSeriesData.map(data => data.y),\r\n          borderColor: 'rgba(40, 167, 69, 1)',\r\n          backgroundColor: 'rgba(40, 167, 69, 0.5)',\r\n          tension: 0.1,\r\n        },\r\n        {\r\n          label: 'AccelZ',\r\n          data: accelTimeSeriesData.map(data => data.z),\r\n          borderColor: 'rgba(220, 53, 69, 1)',\r\n          backgroundColor: 'rgba(220, 53, 69, 0.5)',\r\n          tension: 0.1,\r\n        },\r\n      ],\r\n    };\r\n\r\n    const gyroLineChartData = {\r\n      labels: gyroTimeSeriesData.map(data => data.time),\r\n      datasets: [\r\n        {\r\n          label: 'GyroX',\r\n          data: gyroTimeSeriesData.map(data => data.x),\r\n          borderColor: 'rgba(23, 162, 184, 1)',\r\n          backgroundColor: 'rgba(23, 162, 184, 0.5)',\r\n          tension: 0.1,\r\n        },\r\n        {\r\n          label: 'GyroY',\r\n          data: gyroTimeSeriesData.map(data => data.y),\r\n          borderColor: 'rgba(255, 193, 7, 1)',\r\n          backgroundColor: 'rgba(255, 193, 7, 0.5)',\r\n          tension: 0.1,\r\n        },\r\n        {\r\n          label: 'GyroZ',\r\n          data: gyroTimeSeriesData.map(data => data.z),\r\n          borderColor: 'rgba(108, 117, 125, 1)',\r\n          backgroundColor: 'rgba(108, 117, 125, 0.5)',\r\n          tension: 0.1,\r\n        },\r\n      ],\r\n    };\r\n\r\n    const lineChartOptions = {\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n      plugins: {\r\n        legend: {\r\n          position: 'top',\r\n        },\r\n        title: {\r\n          display: true,\r\n          text: 'Real-time Accelerometer and Gyroscope Data',\r\n        },\r\n      },\r\n      scales: {\r\n        x: {\r\n          title: {\r\n            display: true,\r\n            text: 'Time',\r\n          },\r\n        },\r\n        y: {\r\n          title: {\r\n            display: true,\r\n            text: 'Sensor Value',\r\n          },\r\n        },\r\n      },\r\n    };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"text-center mb-4\">Fall Detection Dashboard</h1>\r\n\r\n      <div className=\"row\">\r\n        {/* Current Prediction (Top Left) */}\r\n        <div className=\"col-md-6\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">Dự đoán hành động hiện tại</div>\r\n            <div className=\"card-body\" id=\"currentPrediction\">\r\n              <h3>{currentPrediction.action}</h3>\r\n              <p>{currentPrediction.confidence}</p>\r\n              <small>{currentPrediction.timestamp}</small>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Prediction History (Top Right) */}\r\n        <div className=\"col-md-6\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">Lịch sử dự đoán</div>\r\n            <div className=\"card-body\">\r\n              <table className=\"table table-bordered table-striped table-fixed\" id=\"predictionHistoryTable\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Thời gian</th>\r\n                    <th>Hành động</th>\r\n                    <th>Độ tin cậy</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {predictionHistory.map((prediction, index) => (\r\n                    <tr key={index}>\r\n                      <td>{prediction.time}</td>\r\n                      <td>{prediction.action}</td>\r\n                      <td>{prediction.confidence}</td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Accelerometer Chart (Below Top Row, Left) */}\r\n      <div className=\"row mt-4\">\r\n        <div className=\"col-md-6\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">Biểu đồ gia tốc (Realtime)</div>\r\n            <div className=\"card-body\">\r\n              <div style={{ height: '300px' }}>\r\n                 <Line data={accelLineChartData} options={lineChartOptions} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Gyroscope Chart (Below Top Row, Right) */}\r\n        <div className=\"col-md-6\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">Biểu đồ con quay hồi chuyển (Realtime)</div>\r\n            <div className=\"card-body\">\r\n              <div style={{ height: '300px' }}>\r\n                <Line data={gyroLineChartData} options={lineChartOptions} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}