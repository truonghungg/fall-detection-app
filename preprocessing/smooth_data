import pickle
import numpy as np
from scipy.signal import savgol_filter  

with open('processed_data.pkl', 'rb') as f:
    X_train, X_test, y_train, y_test, label_encoder = pickle.load(f)
def smooth_window(window, window_size=15, poly_order=3):
    smoothed_window = np.zeros_like(window)
    for i in range(window.shape[1]):  
        smoothed_window[:, i] = savgol_filter(
            window[:, i], 
            window_length=window_size, 
            polyorder=poly_order
        )
    return smoothed_window

SMOOTH_WINDOW_SIZE = 15  
POLY_ORDER = 3

# Làm mịn tập train
X_train_smoothed = np.array([smooth_window(window, SMOOTH_WINDOW_SIZE, POLY_ORDER) for window in X_train])


X_test_smoothed = np.array([smooth_window(window, SMOOTH_WINDOW_SIZE, POLY_ORDER) for window in X_test])

print("Shape của X_train trước khi làm mịn:", X_train.shape)
print("Shape của X_train sau khi làm mịn:", X_train_smoothed.shape)


import matplotlib.pyplot as plt

sample_idx = np.random.randint(0, len(X_train))
original_data = X_train[sample_idx][:, 0]  # Lấy trục AccelX
smoothed_data = X_train_smoothed[sample_idx][:, 0]

plt.figure(figsize=(12, 6))
plt.plot(original_data, label="Dữ liệu gốc", alpha=0.5)
plt.plot(smoothed_data, label="Dữ liệu đã làm mịn", color="red")
plt.title(f"Ví dụ làm mịn cho cửa sổ {sample_idx} (AccelX)")
plt.legend()
plt.show()

with open('preprocessing/smoothed_processed_data.pkl', 'wb') as f:
    pickle.dump((X_train_smoothed, X_test_smoothed, y_train, y_test, label_encoder), f)